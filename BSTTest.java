public class BSTTest {
     public static void main(String[] args){
		BST bst = new BST();
		System.out.println("Is the BST empty: "+bst.isEmpty());
		bst.insert(7);
		System.out.println("Is the BST still empty: "+bst.isEmpty());
		bst.insert(5);
		bst.insert(3);
		bst.insert(2);
		bst.insert(1);
		bst.insert(4);
		bst.insert(17);
		bst.insert(23);
		bst.insert(27);
		bst.insert(14);
		bst.insert(18);
		bst.insert(12);
        bst.insert(11);
        bst.insert(13);
        bst.insert(15);
		bst.insert(16);
		bst.insert(19);
		bst.search(10);
        bst.search(7);
        System.out.println("Preorder depth first traversal");
		bst.preorder(bst.root);
		System.out.println("Inorder depth first traversal");
		bst.inorder(bst.root);
		System.out.println("Postorder depth frist traversl");
		bst.postorder(bst.root);
		System.out.println("Breadth first traversing from left to right");
		bst.bft(bst.root);
        System.out.println("\ndelete 1");
        bst.deleteByCopy(1);
        System.out.println("Preorder depth first traversal");
		bst.preorder(bst.root);
		System.out.println("Inorder depth first traversal");
		bst.inorder(bst.root);
		System.out.println("Postorder depth frist traversl");
		bst.postorder(bst.root);
		System.out.println("Breadth first traversing from left to right");
		bst.bft(bst.root);
        System.out.println("\ndelete 3");
        bst.deleteByCopy(3);
        System.out.println("Preorder depth first traversal");
		bst.preorder(bst.root);
		System.out.println("Inorder depth first traversal");
		bst.inorder(bst.root);
		System.out.println("Postorder depth frist traversl");
		bst.postorder(bst.root);
		System.out.println("Breadth first traversing from left to right");
		bst.bft(bst.root);
        System.out.println("\ndelete 7");
        bst.deleteByCopy(7);
        System.out.println("Preorder depth first traversal");
		bst.preorder(bst.root);
		System.out.println("Inorder depth first traversal");
		bst.inorder(bst.root);
		System.out.println("Postorder depth frist traversl");
		bst.postorder(bst.root);
		System.out.println("Breadth first traversing from left to right");
		bst.bft(bst.root);
		System.out.println("\ndelete 70");
		bst.deleteByMerge(17);
		System.out.println("Inorder depth first traversal");
		bst.inorder(bst.root);
	}
}
